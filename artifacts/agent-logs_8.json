{
  "user_task": "\n1. Navigate to https://ai.azure.com/foundryProject/overview?wsid=/subscriptions/696debc0-8b66-4d84-87b1-39f43917d76c/resourceGroups/rg-t-schanda-8629/providers/Microsoft.CognitiveServices/accounts/playwright-pj-resource/projects/playwright_pj&tid=72f988bf-86f1-41af-91ab-2d7cd011db47.\n2. Search for Model Catalogue.\n3. Search for Azure Speech.\n4. See if the Azure AI Speech is visible or not\n4. Close the browser.\n",
  "generated_script": "import { test, expect } from '@playwright/test';\n\ntest('Azure AI Foundry Navigation', async ({ page }) => {\n  // Step 1: Navigate to the Azure AI Foundry overview page\n  await page.goto('https://ai.azure.com/foundryProject/overview?wsid=/subscriptions/696debc0-8b66-4d84-87b1-39f43917d76c/resourceGroups/rg-t-schanda-8629/providers/Microsoft.CognitiveServices/accounts/playwright-pj-resource/projects/playwright_pj&tid=72f988bf-86f1-41af-91ab-2d7cd011db47', { waitUntil: 'networkidle' });\n\n  // Step 2: Click on 'Model catalog' link\n  await page.getByRole('link', { name: 'Model catalog' }).click();\n  await page.waitForURL('**/resource/models?wsid=*', { timeout: 10000 });\n\n  // Step 3: Search for 'Azure Speech' in the search box\n  const searchBox = page.getByRole('searchbox', { name: 'Search' });\n  await searchBox.fill('Azure Speech');\n  await searchBox.press('Enter');\n\n  // Step 4: Verify visibility of 'Azure AI Speech'\n  const azureSpeechModel = page.locator('text=Azure AI Speech');\n  await expect(azureSpeechModel).toBeVisible({ timeout: 10000 });\n\n  // Step 5: Close the browser (handled automatically by Playwright test runner)\n});",
  "status": "success"
}